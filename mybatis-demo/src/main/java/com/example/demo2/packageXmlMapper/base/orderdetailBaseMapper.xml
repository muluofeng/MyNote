<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="packageMapper.base.orderdetailBaseMapper">


    <insert id="insertorderdetail"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `orderdetail`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="orderId!=null">
                        `order_id`,
                    </if>
                    <if test="goodsName!=null">
                        `goods_name`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="orderId!=null">
                    #{orderId},
                </if>
                <if test="goodsName!=null">
                    #{goodsName},
                </if>
        </trim>
        )
    </insert>




    <update id="updateorderdetail">
        UPDATE `orderdetail`
        SET
        <trim suffixOverrides=",">
            <if test="orderId != null">
                `order_id` = #{orderId},
            </if>
            <if test="goodsName != null and goodsName!=''">
                `goods_name` = #{goodsName},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `orderdetail`
        SET
        <trim suffixOverrides=",">
        <if test="set.orderId != null">
            `order_id` = #{set.orderId},
        </if>
        <if test="set.goodsName != null and set.goodsName!=''">
            `goods_name` = #{set.goodsName},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.orderIdList != null">
                    `order_id` in
                    <foreach collection="where.orderIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.orderIdSt !=null">
                `order_id` >= #{where.orderIdSt} and
            </if>
            <if test="where.orderIdEd!=null">
                `order_id` &lt;= #{where.orderIdEd} and
            </if>
                <if test="where.goodsNameList != null">
                    `goods_name` in
                    <foreach collection="where.goodsNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyGoodsName!=null and where.fuzzyGoodsName.size()>0">
                (
                <foreach collection="where.fuzzyGoodsName"  separator="or" item="item">
                    `Goods_name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyGoodsName!=null and where.rightFuzzyGoodsName.size()>0">
                (
                <foreach collection="where.rightFuzzyGoodsName"  separator="or" item="item">
                    `Goods_name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="packageModel.orderdetail" id="orderdetailMap">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="goodsName" column="goods_name"/>
    </resultMap>


    <select id="queryorderdetail" resultMap="orderdetailMap">
        select
        <include refid="baseResult"></include>
        from  `orderdetail`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="orderId != null">
                `order_id` = #{orderId} and
            </if>
            <if test="goodsName != null and goodsName!=''">
                `goods_name` = #{goodsName} and
            </if>
            <if test = "(_parameter instanceof packageModel.orderdetail$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="orderIdList != null">
                    `order_id` in
                    <foreach collection="orderIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="orderIdSt !=null">
                    `order_id` >= #{orderIdSt} and
                </if>
                <if test="orderIdEd!=null">
                    `order_id` &lt;= #{orderIdEd} and
                </if>
                <if test="goodsNameList != null">
                    `goods_name` in
                    <foreach collection="goodsNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyGoodsName!=null and fuzzyGoodsName.size()>0">
                    (
                    <foreach collection="fuzzyGoodsName"  separator="or" item="item">
                        `Goods_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyGoodsName!=null and rightFuzzyGoodsName.size()>0">
                    (
                    <foreach collection="rightFuzzyGoodsName"  separator="or" item="item">
                        `Goods_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryorderdetailLimit1" resultMap="orderdetailMap">
        select
        <include refid="baseResult"></include>
        from  `orderdetail`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="orderId != null">
                `order_id` = #{orderId} and
            </if>
            <if test="goodsName != null and goodsName!=''">
                `goods_name` = #{goodsName} and
            </if>
            <if test = "(_parameter instanceof packageModel.orderdetail$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="orderIdList != null">
                        `order_id` in
                        <foreach collection="orderIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="orderIdSt !=null">
                    `order_id` >= #{orderIdSt} and
                </if>
                <if test="orderIdEd!=null">
                    `order_id` &lt;= #{orderIdEd} and
                </if>
                    <if test="goodsNameList != null">
                        `goods_name` in
                        <foreach collection="goodsNameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyGoodsName!=null and fuzzyGoodsName.size()>0">
                    (
                    <foreach collection="fuzzyGoodsName"  separator="or" item="item">
                        `Goods_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyGoodsName!=null and rightFuzzyGoodsName.size()>0">
                    (
                    <foreach collection="rightFuzzyGoodsName"  separator="or" item="item">
                        `Goods_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `order_id`,
        `goods_name`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof packageModel.orderdetail$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.orderId==true">
                        `order_id`,
                    </if>
                    <if test="fetchFields.fetchFields.goodsName==true">
                        `goods_name`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.orderId==null">
                        `order_id`,
                    </if>
                    <if test="fetchFields.excludeFields.goodsName==null">
                        `goods_name`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof packageModel.orderdetail$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>